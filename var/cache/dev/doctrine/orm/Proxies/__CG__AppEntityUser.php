<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'num_tel', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'mdp', '' . "\0" . 'App\\Entity\\User' . "\0" . 'cin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\User' . "\0" . 'reponses', '' . "\0" . 'App\\Entity\\User' . "\0" . 'reclamations', '' . "\0" . 'App\\Entity\\User' . "\0" . 'vehicules', '' . "\0" . 'App\\Entity\\User' . "\0" . 'contrats', '' . "\0" . 'App\\Entity\\User' . "\0" . 'rendezVouses', '' . "\0" . 'App\\Entity\\User' . "\0" . 'locales', '' . "\0" . 'App\\Entity\\User' . "\0" . 'devis', '' . "\0" . 'App\\Entity\\User' . "\0" . 'constats', '' . "\0" . 'App\\Entity\\User' . "\0" . 'rapports'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'num_tel', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'mdp', '' . "\0" . 'App\\Entity\\User' . "\0" . 'cin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\User' . "\0" . 'reponses', '' . "\0" . 'App\\Entity\\User' . "\0" . 'reclamations', '' . "\0" . 'App\\Entity\\User' . "\0" . 'vehicules', '' . "\0" . 'App\\Entity\\User' . "\0" . 'contrats', '' . "\0" . 'App\\Entity\\User' . "\0" . 'rendezVouses', '' . "\0" . 'App\\Entity\\User' . "\0" . 'locales', '' . "\0" . 'App\\Entity\\User' . "\0" . 'devis', '' . "\0" . 'App\\Entity\\User' . "\0" . 'constats', '' . "\0" . 'App\\Entity\\User' . "\0" . 'rapports'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $prenom): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumTel(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumTel', []);

        return parent::getNumTel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumTel(int $num_tel): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumTel', [$num_tel]);

        return parent::setNumTel($num_tel);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getMdp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMdp', []);

        return parent::getMdp();
    }

    /**
     * {@inheritDoc}
     */
    public function setMdp(string $mdp): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMdp', [$mdp]);

        return parent::setMdp($mdp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCin(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCin', []);

        return parent::getCin();
    }

    /**
     * {@inheritDoc}
     */
    public function setCin(int $cin): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCin', [$cin]);

        return parent::setCin($cin);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(string $role): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(?string $adresse): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getReponses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReponses', []);

        return parent::getReponses();
    }

    /**
     * {@inheritDoc}
     */
    public function addReponse(\App\Entity\Reponse $reponse): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReponse', [$reponse]);

        return parent::addReponse($reponse);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReponse(\App\Entity\Reponse $reponse): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReponse', [$reponse]);

        return parent::removeReponse($reponse);
    }

    /**
     * {@inheritDoc}
     */
    public function getReclamations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReclamations', []);

        return parent::getReclamations();
    }

    /**
     * {@inheritDoc}
     */
    public function addReclamation(\App\Entity\Reclamation $reclamation): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReclamation', [$reclamation]);

        return parent::addReclamation($reclamation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReclamation(\App\Entity\Reclamation $reclamation): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReclamation', [$reclamation]);

        return parent::removeReclamation($reclamation);
    }

    /**
     * {@inheritDoc}
     */
    public function getVehicules(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehicules', []);

        return parent::getVehicules();
    }

    /**
     * {@inheritDoc}
     */
    public function addVehicule(\App\Entity\Vehicule $vehicule): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVehicule', [$vehicule]);

        return parent::addVehicule($vehicule);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVehicule(\App\Entity\Vehicule $vehicule): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVehicule', [$vehicule]);

        return parent::removeVehicule($vehicule);
    }

    /**
     * {@inheritDoc}
     */
    public function getContrats(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContrats', []);

        return parent::getContrats();
    }

    /**
     * {@inheritDoc}
     */
    public function addContrat(\App\Entity\Contrat $contrat): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContrat', [$contrat]);

        return parent::addContrat($contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContrat(\App\Entity\Contrat $contrat): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContrat', [$contrat]);

        return parent::removeContrat($contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getRendezVouses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRendezVouses', []);

        return parent::getRendezVouses();
    }

    /**
     * {@inheritDoc}
     */
    public function addRendezVouse(\App\Entity\RendezVous $rendezVouse): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRendezVouse', [$rendezVouse]);

        return parent::addRendezVouse($rendezVouse);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRendezVouse(\App\Entity\RendezVous $rendezVouse): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRendezVouse', [$rendezVouse]);

        return parent::removeRendezVouse($rendezVouse);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocales(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocales', []);

        return parent::getLocales();
    }

    /**
     * {@inheritDoc}
     */
    public function addLocale(\App\Entity\Locale $locale): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocale', [$locale]);

        return parent::addLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocale(\App\Entity\Locale $locale): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocale', [$locale]);

        return parent::removeLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getDevis(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDevis', []);

        return parent::getDevis();
    }

    /**
     * {@inheritDoc}
     */
    public function addDevi(\App\Entity\Devis $devi): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDevi', [$devi]);

        return parent::addDevi($devi);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDevi(\App\Entity\Devis $devi): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDevi', [$devi]);

        return parent::removeDevi($devi);
    }

    /**
     * {@inheritDoc}
     */
    public function getConstats(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConstats', []);

        return parent::getConstats();
    }

    /**
     * {@inheritDoc}
     */
    public function addConstat(\App\Entity\Constat $constat): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConstat', [$constat]);

        return parent::addConstat($constat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConstat(\App\Entity\Constat $constat): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConstat', [$constat]);

        return parent::removeConstat($constat);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapports(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapports', []);

        return parent::getRapports();
    }

    /**
     * {@inheritDoc}
     */
    public function addRapport(\App\Entity\Rapport $rapport): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRapport', [$rapport]);

        return parent::addRapport($rapport);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRapport(\App\Entity\Rapport $rapport): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRapport', [$rapport]);

        return parent::removeRapport($rapport);
    }

}
