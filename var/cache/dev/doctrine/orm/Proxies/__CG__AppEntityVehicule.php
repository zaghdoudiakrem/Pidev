<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Vehicule extends \App\Entity\Vehicule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'matricule', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'marque', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'nb_ch', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'id_client', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'id_contrat', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'constats'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'matricule', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'marque', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'nb_ch', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'id_client', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'id_contrat', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'constats'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Vehicule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getMatricule(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatricule', []);

        return parent::getMatricule();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatricule(string $matricule): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatricule', [$matricule]);

        return parent::setMatricule($matricule);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', []);

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque(string $marque): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', [$marque]);

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbCh(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbCh', []);

        return parent::getNbCh();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbCh(int $nb_ch): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbCh', [$nb_ch]);

        return parent::setNbCh($nb_ch);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdClient(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdClient', []);

        return parent::getIdClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdClient(?\App\Entity\User $id_client): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdClient', [$id_client]);

        return parent::setIdClient($id_client);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdContrat(): ?\App\Entity\Contrat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdContrat', []);

        return parent::getIdContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdContrat(\App\Entity\Contrat $id_contrat): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdContrat', [$id_contrat]);

        return parent::setIdContrat($id_contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getConstats(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConstats', []);

        return parent::getConstats();
    }

    /**
     * {@inheritDoc}
     */
    public function addConstat(\App\Entity\Constat $constat): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConstat', [$constat]);

        return parent::addConstat($constat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConstat(\App\Entity\Constat $constat): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConstat', [$constat]);

        return parent::removeConstat($constat);
    }

}
